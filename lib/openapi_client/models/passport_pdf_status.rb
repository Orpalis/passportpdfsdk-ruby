=begin
#PassportPDF API

#      Introduction:    PassportPDF API is a REST API that lets you perform complex operations on documents and images easily.  You may consume the API by using our.NET SDK (other platforms / languages are soon to come), or any REST client by sending your requests to the appropriate endpoints.   A list of all the available endpoints can be found on the API reference page at https://passportpdfapi.com/references/api/index.html        Authentication:    Each available operation has a predefined cost, expressed as a number of tokens.  These tokens are deducted from your \"passport,\" which has a unique identifier that acts as an API key. This key is, therefore, required to be provided with each request for the latter to be honored(except if the operation does not have a cost, typically when you request a simple data with a GET).  Your key must be included in the header of the request, under the name \"X-PassportPdf-API-Key.\"  If you are using the.NET SDK, you can either set your key in the ApiKey property of your API instance(PdfApi or ImageApi, for example) or set it globally in the GlobalConfiguration instance if you want to set it once for the whole life cycle of your application.          Communication with the API:    All the available actions are listed on the API reference page, as previously mentioned.  There are several different controllers, i.e., routes, which categorize the actions.For example, you may use the PDF controller(\"/api/pdf\" route) to perform PDF - related operations, and the Image controller(\"/api/image\") for images.  Each action defines what kind of parameters(if any) is expected, and what kind of response is served.Parameters and responses are represented using data models, or \"schemas,\" and are listed in the \"Schemas\" section of the reference.   Parameters and response models of a given action are both prefixed by the controller name, the action name, and \"Parameters\" / \"Response,\" e.g. \"api/pdf/reduce\" respectively receives and serves a PdfReduceParameters and PdfReduceResponse models.  Using the .NET SDK, you will find the objects to interact with the different controllers in the PassportPDF.Api namespace and all the schemas in the PassportPDF.Model namespace.        Processing documents:    Each document manipulation starts with importing the file onto the API.  The LoadDocument action of the PDF controller lets you import your document as a PDF.  Note that the GetPDFImportSupportedFileExtensions action of the same controller will let you know all the different types of files that you may import as a PDF. LoadDocument responds with a JSON-serialized PdfLoadDocumentResponse model, which contains a \"FileId\" property.This identifier is required for the API to know about your document for further manipulations, hence the presence of a \"FileId\" property in the PdfReduceParameters schema (and many other parameters schemas). To download the changes made to a file, you need, of course, to download the new version of the file from the API.  To save your document as a PDF, you will need to use the SaveDocument action of the PDF controller and provide a PdfSaveDocumentParameters data model that contains the identifier of your file.        Errors:    Conventional HTTP response codes are used to indicate the success or failure of an API request.   The Error data model also defines some information about an error that occurred on the API.   Each response model has an Error in its definition, and its sole existence in the serialized response - which should thus always be checked - indicates that something went wrong.  Among the information given by the Error schema, \"ResultCode\" specifies a value of the \"PassportPDFStatus\" enumeration, that defines a first level of error information. \"InternalErrorId\" defines a unique identifier for the error, which comes very handy for us to troubleshoot any issue you may encounter quickly.        Efficiency considerations:    Multipart upload/download is available and lets you directly stream a file to/from the API.  In the PDF controller, LoadDocument/LoadDocumentMultipart and SaveDocument/SaveDocumentToFile may be used to upload/download a document using respectively binary data serialization and streaming multipart HTTP requests.  The second approach should be favored when dealing with large files, as it will be much more efficient in that context.  

The version of the OpenAPI document: 1.0.1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-SNAPSHOT

=end

require 'date'

module OpenapiClient
  class PassportPDFStatus
    OK = "OK".freeze
    ACTION_TIMED_OUT = "ActionTimedOut".freeze
    EMPTY_PARAMETER = "EmptyParameter".freeze
    INVALID_API_KEY = "InvalidAPIKey".freeze
    NOT_ENOUGH_TOKENS = "NotEnoughTokens".freeze
    GENERIC_ERROR = "GenericError".freeze
    INVALID_PARAMETER = "InvalidParameter".freeze
    INVALID_COLOR = "InvalidColor".freeze
    OUT_OF_MEMORY = "OutOfMemory".freeze
    NOT_IMPLEMENTED = "NotImplemented".freeze
    FILE_NOT_FOUND = "FileNotFound".freeze
    ACCESS_DENIED = "AccessDenied".freeze
    CAN_NOT_IMPORT_FILE_TO_PDF = "CanNotImportFileToPDF".freeze
    PDF_CAN_NOT_BE_DECRYPTED = "PdfCanNotBeDecrypted".freeze
    PDF_OPERATION_NOT_ALLOWED = "PdfOperationNotAllowed".freeze
    PDF_CAN_NOT_OPEN_FILE = "PdfCanNotOpenFile".freeze
    PDF_CAN_NOT_SAVE_FILE = "PdfCanNotSaveFile".freeze
    CAN_NOT_CREATE_FILE = "CanNotCreateFile".freeze
    NO_DOCUMENT_PROVIDED = "NoDocumentProvided".freeze
    CAN_NOT_REMOVE_PAGE = "CanNotRemovePage".freeze
    CAN_NOT_SWAP_PAGES = "CanNotSwapPages".freeze
    CAN_NOT_MOVE_PAGE = "CanNotMovePage".freeze
    CAN_NOT_ROTATE_PAGE = "CanNotRotatePage".freeze
    CAN_NOT_FLIP_PAGE = "CanNotFlipPage".freeze
    INVALID_PAGE_RANGE = "InvalidPageRange".freeze
    CAN_NOT_REDUCE_PDF = "CanNotReducePDF".freeze
    CAN_NOT_AUTO_DESKEW = "CanNotAutoDeskew".freeze
    CAN_NOT_SPLIT = "CanNotSplit".freeze
    CAN_NOT_SAVE_AS_JPEG = "CanNotSaveAsJPEG".freeze
    CAN_NOT_DIGI_SIGN = "CanNotDigiSign".freeze
    CAN_NOT_PROTECT = "CanNotProtect".freeze
    CAN_NOT_CONVERT_TO_PDFA = "CanNotConvertToPDFA".freeze
    CAN_NOT_ANNOTATE = "CanNotAnnotate".freeze
    CAN_NOT_CLEAR_PAGE = "CanNotClearPage".freeze
    CAN_NOT_MERGE = "CanNotMerge".freeze
    CAN_NOT_GET_PAGE_THUMBNAIL = "CanNotGetPageThumbnail".freeze
    CAN_NOT_GET_DOCUMENT_PREVIEW = "CanNotGetDocumentPreview".freeze
    CAN_NOT_REMOVE_PAGE_FORM_FIELDS = "CanNotRemovePageFormFields".freeze
    CAN_NOT_INSERT_IMAGE = "CanNotInsertImage".freeze
    CAN_NOT_DRAW_IMAGE = "CanNotDrawImage".freeze
    CAN_NOT_INSERT_PAGE_NUMBER = "CanNotInsertPageNumber".freeze
    CAN_NOT_INSERT_TEXT = "CanNotInsertText".freeze
    CAN_NOT_READ_BARCODE = "CanNotReadBarcode".freeze
    CAN_NOT_FLATTEN = "CanNotFlatten".freeze
    CAN_NOT_EXPORT_MORE_THAN2_GIGABYTE_FILE = "CanNotExportMoreThan2GigabyteFile".freeze
    CAN_NOT_OPEN_SESSION = "CanNotOpenSession".freeze
    UNKNOWN_OR_EXPIRED_SESSION = "UnknownOrExpiredSession".freeze
    CAN_NOT_SAVE_FILE = "CanNotSaveFile".freeze
    CAN_NOT_REPAIR_PDF = "CanNotRepairPDF".freeze
    UNSUPPORTED_IMAGE_FORMAT = "UnsupportedImageFormat".freeze
    CAN_NOT_OCR = "CanNotOCR".freeze
    CAN_NOT_OPEN_IMAGE = "CanNotOpenImage".freeze
    CAN_NOT_SAVE_AS_PNG = "CanNotSaveAsPNG".freeze
    CAN_NOT_SAVE_AS_TIFF = "CanNotSaveAsTIFF".freeze
    CAN_NOT_SAVE_AS_TIFF_MULTIPAGE = "CanNotSaveAsTIFFMultipage".freeze
    CAN_NOT_SET_INFO = "CanNotSetInfo".freeze
    CAN_NOT_SET_PAGE_BOX = "CanNotSetPageBox".freeze
    CAN_NOT_EXTRACT_PAGE = "CanNotExtractPage".freeze
    CAN_NOT_INSERT_NEW_PAGE = "CanNotInsertNewPage".freeze
    CAN_NOT_CLONE_PAGE = "CanNotClonePage".freeze
    CAN_NOT_SET_INITIAL_VIEW = "CanNotSetInitialView".freeze
    CAN_NOT_ADJUST = "CanNotAdjust".freeze
    CAN_NOT_RESIZE = "CanNotResize".freeze
    CAN_NOT_FILTER = "CanNotFilter".freeze
    CAN_NOT_CLEANUP_DOCUMENT = "CanNotCleanupDocument".freeze
    UNKNOWN_DOCUMENT_FORMAT = "UnknownDocumentFormat".freeze
    CAN_NOT_CROP = "CanNotCrop".freeze
    CAN_NOT_ROTATE = "CanNotRotate".freeze
    CAN_NOT_DETECT_COLOR = "CanNotDetectColor".freeze
    CAN_NOT_CONVERT_COLOR_DEPTH = "CanNotConvertColorDepth".freeze
    PDF_CAN_NOT_ADD_FONT = "PdfCanNotAddFont".freeze
    ACTION_EXECUTION_REJECTED = "ActionExecutionRejected".freeze
    CAN_NOT_EXTRACT_TEXT = "CanNotExtractText".freeze
    CAN_NOT_DETECT_BLANK_PAGES = "CanNotDetectBlankPages".freeze
    CAN_NOT_MICR = "CanNotMICR".freeze
    CAN_NOT_DETECT_PAGE_ORIENTATION = "CanNotDetectPageOrientation".freeze
    CAN_NOT_DELETE_PAGE = "CanNotDeletePage".freeze
    CAN_NOT_SAVE_AS_PDF = "CanNotSaveAsPDF".freeze
    CAN_NOT_EXTRACT_IMAGE = "CanNotExtractImage".freeze
    CAN_NOT_CLONE_IMAGE_REGION = "CanNotCloneImageRegion".freeze
    CAN_NOT_REORDER_PAGES = "CanNotReorderPages".freeze
    CAN_NOT_AUTO_CROP = "CanNotAutoCrop".freeze
    CAN_NOT_SCALE_PAGE = "CanNotScalePage".freeze
    CAN_NOT_MERGE_PAGES = "CanNotMergePages".freeze

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      constantValues = PassportPDFStatus.constants.select { |c| PassportPDFStatus::const_get(c) == value }
      raise "Invalid ENUM value #{value} for class #PassportPDFStatus" if constantValues.empty?
      value
    end
  end
end
